#
# $Id$
# Copyright (C) 1999-2009 Inter7 Internet Technologies, Inc.
#

CC = @CC@
AR = ar
BINS = 
CFLAGS = @CFLAGS@
LIBS = @LIBS@ -L. -lvpopmail
LLIBS = @LIBS@ 
LDFLAGS = @LDFLAGS@
VPOPMAILDIR = @vpopmaildir@
DEPS = Makefile
INSTALL = @INSTALL@
CCC = $(CC) $(CFLAGS)
LINK = $(CC) $(LDFLAGS)
BUILD_LIBS = libvpopmail.so
BUILD_BINS = vchkpw vdelivermail clearopensmtp vadddomain vdeldomain vpasswd vadduser vdeluser \
	   vaddaliasdomain vsetuserquota vpopbull vdeloldusers vmoduser valias vuserinfo vmkpasswd \
	   vipmap vdominfo vconvert vkill vmoddomlimits vchangepw dotqmail2valias vpopmaild \
	   vlist vusagec authvchkpw
BUILD_ALL = $(BUILD_LIBS) $(BUILD_BINS) @vusagedbuild@
INSTALL_HEADERS = vpopmail.h config.h vauth.h vlimits.h storage.h client.h ippp.h conf.h quota.h vauthmodule.h
INSTALL_DIRS = bin etc doc include lib domains
CDB_OBJECTS = cdb/cdb_hash.o cdb/cdbmake_add.o cdb/cdbmake_hash.o cdb/cdbmake_pack.o \
			  cdb/cdb_seek.o cdb/cdb_unpack.o
LIBVPOPMAIL_OBJECTS = md5.o bigdir.o vauth.o file_lock.o vpalias.o seek.o vlimits.o maildirquota.o \
					  vutil.o vlistlib.o client.o conf.o ippp.o backfill.o vpopmail.o \
					  quota.o $(CDB_OBJECTS)

#
# Build
#

all: $(BUILD_ALL) post-compile

#
# cdb library
# 

cdb: $(CDB_OBJECTS)
	(cd cdb;make)
cdb/%.o:
	(cd cdb;make)

#
# vusage daemon
#

vusaged/vusaged:
	(cd vusaged;make)

#
# Library
#

#libvpopmail.so: $(LIBVPOPMAIL_OBJECTS)
#	$(AR) -cru libvpopmail.so $(LIBVPOPMAIL_OBJECTS)
libvpopmail.so: $(LIBVPOPMAIL_OBJECTS)
	$(CC) -shared -o libvpopmail.so $(LIBVPOPMAIL_OBJECTS)

#
# Binaries
#

authvchkpw: authvchkpw.o hmac_md5.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vchkpw: vchkpw.o md5.o hmac_md5.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vdelivermail: vdelivermail.o maildirquota.o quota.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
clearopensmtp: clearopensmtp.o libvpopmail.so 
	$(LINK) -o $@ $+ $(LLIBS)
vadddomain: vadddomain.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vdeldomain: vdeldomain.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vpasswd: vpasswd.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vadduser: vadduser.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vdeluser: vdeluser.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vaddaliasdomain: vaddaliasdomain.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vsetuserquota: vsetuserquota.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vpopbull: vpopbull.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vdeloldusers: vdeloldusers.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vmoduser: vmoduser.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
valias: valias.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vuserinfo: vuserinfo.o maildirquota.o quota.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vmkpasswd: vmkpasswd.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vipmap: vipmap.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vdominfo: vdominfo.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vconvert: vconvert.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vkill: vkill.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vmoddomlimits: vmoddomlimits.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vchangepw: vchangepw.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
dotqmail2valias: dotqmail2valias.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vpopmaild: vpopmaild.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vlist: vlist.o vlistlib.o vutil.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)
vusagec: vusagec.o libvpopmail.so
	$(LINK) -o $@ $+ $(LLIBS)

#
# Objects
#

authvchkpw.o: $(DEPS) authvchkpw.c config.h vpopmail.h md5.h hmac_md5.h vauth.h
	$(CCC) -o $@ -c $*.c
backfill.o: $(DEPS) backfill.c vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
bigdir.o: $(DEPS) bigdir.c file_lock.h config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
clearopensmtp.o: $(DEPS) clearopensmtp.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
client.o: $(DEPS) client.c client.h storage.h conf.h ippp.h
	$(CCC) -o $@ -c $*.c
conf.o: $(DEPS) conf.c conf.h config.h
	$(CCC) -o $@ -c $*.c
dotqmail2valias.o: $(DEPS) dotqmail2valias.c vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
file_lock.o: $(DEPS) file_lock.c file_lock.h config.h
	$(CCC) -o $@ -c $*.c
hmac_md5.o: $(DEPS) hmac_md5.c global.h md5.h
	$(CCC) -o $@ -c $*.c
ippp.o: $(DEPS) ippp.c ippp.h
	$(CCC) -o $@ -c $*.c
maildirquota.o: $(DEPS) maildirquota.c vauth.h vpopmail.h vlimits.h maildirquota.h \
   config.h conf.h storage.h client.h quota.h
	$(CCC) -o $@ -c $*.c
md5.o: $(DEPS) md5.c md5.h cdb
	$(CCC) -o $@ -c $*.c
seek.o: $(DEPS) seek.c seek.h
	$(CCC) -o $@ -c $*.c
vaddaliasdomain.o: $(DEPS) vaddaliasdomain.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vadddomain.o: $(DEPS) vadddomain.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vadduser.o: $(DEPS) vadduser.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
valias.o: $(DEPS) valias.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vauth.o: $(DEPS) vauth.h config.h vpopmail.h file_lock.h vlimits.h cdb vauthmodule.h
	$(CCC) -o $@ -c $*.c
vchangepw.o: $(DEPS) vchangepw.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vchkpw.o: $(DEPS) vchkpw.c config.h vpopmail.h vauth.h vlimits.h vlog.h
	$(CCC) -o $@ -c $*.c
vconvert.o: $(DEPS) vconvert.c config.h vpopmail.h vauth.h cdb
	$(CCC) -o $@ -c $*.c
vdeldomain.o: $(DEPS) vdeldomain.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vdelivermail.o: $(DEPS) vdelivermail.c config.h vpopmail.h vauth.h maildirquota.h seek.h vlimits.h quota.h
	$(CCC) -o $@ -c $*.c
vdeloldusers.o: $(DEPS) vdeloldusers.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vdeluser.o: $(DEPS) vdeluser.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vdominfo.o: $(DEPS) vdominfo.c config.h vpopmail.h vauth.h vlimits.h quota.h
	$(CCC) -o $@ -c $*.c
vipmap.o: $(DEPS) vipmap.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vkill.o: $(DEPS) vkill.c config.h vpopmail.h
	$(CCC) -o $@ -c $*.c
vlimits.o: $(DEPS) vlimits.c config.h vpopmail.h vauth.h vlimits.h
	$(CCC) -o $@ -c $*.c
vlistlib.o: $(DEPS) vlistlib.c vpopmail.h config.h vauth.h vutil.h
	$(CCC) -o $@ -c $*.c
vlist.o: $(DEPS) vlist.c vpopmail.h config.h
	$(CCC) -o $@ -c $*.c
vmkpasswd.o: $(DEPS) vmkpasswd.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vmoddomlimits.o: $(DEPS) vmoddomlimits.c config.h vpopmail.h vauth.h vlimits.h
	$(CCC) -o $@ -c $*.c
vmoduser.o: $(DEPS) vmoduser.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vpalias.o: $(DEPS) vpalias.c vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vpasswd.o: $(DEPS) vpasswd.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vpopbull.o: $(DEPS) vpopbull.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vpopmaild.o: $(DEPS) vpopmaild.c config.h vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
vpopmail.o: $(DEPS) vpopmail.c config.h md5.h vpopmail.h file_lock.h vauth.h vlimits.h maildirquota.h quota.h
	$(CCC) -o $@ -c $*.c
vsetuserquota.o: $(DEPS) vsetuserquota.c config.h vpopmail.h vauth.h 
	$(CCC) -o $@ -c $*.c
vusagec.o: $(DEPS) vusagec.c client.h storage.h
	$(CCC) -o $@ -c $*.c
vuserinfo.o: $(DEPS) vuserinfo.c vpopmail.h vauth.h config.h maildirquota.h quota.h storage.h
	$(CCC) -o $@ -c $*.c
vutil.o: $(DEPS) vutil.c vpopmail.h vauth.h
	$(CCC) -o $@ -c $*.c
quota.o: $(DEPS) quota.c quota.h client.h storage.h vauth.h vpopmail.h
	$(CCC) -o $@ -c $*.c

#
# Package
#

post-compile:
	@echo
	@echo "    vpopmail is compiled        "
	@echo "(Type 'make install' to install)"
	@echo

install-strip: install

install: $(BUILD_ALL)
	@echo
	@echo "Installing..."
	@echo
	
	@#
	@# Create directories
	@#
	
	for i in $(INSTALL_DIRS); do mkdir -p $(VPOPMAILDIR)/$${i}; chown vpopmail:vchkpw $(VPOPMAILDIR)/$${i}; done
	chmod 700 $(VPOPMAILDIR)/domains
	
	@#
	@# Copy binaries, libraries and headers
	@#
	
	for i in $(BUILD_BINS); do $(INSTALL) -s -o vpopmail -g vchkpw $${i} $(VPOPMAILDIR)/bin; chmod 711 $(VPOPMAILDIR)/bin/$${i}; done
	for i in $(BUILD_LIBS); do $(INSTALL) $${i} $(VPOPMAILDIR)/lib; chmod 644 $(VPOPMAILDIR)/lib/$${i}; done
	$(INSTALL) -m 444 config.h $(VPOPMAILDIR)/include/vpopmail_config.h
	for i in $(INSTALL_HEADERS); do $(INSTALL) -m 444 $${i} $(VPOPMAILDIR)/include; done
	
	@#
	@# Create dependency files
	@#
	
	echo "-I$(VPOPMAILDIR)/include" > $(VPOPMAILDIR)/etc/inc_deps
	echo "-L$(VPOPMAILDIR)/lib $(LLIBS) -lvpopmail" > $(VPOPMAILDIR)/etc/lib_deps
	
	if test ! -r $(VPOPMAILDIR)/etc/vlimits.default; then \
	  $(INSTALL) -m 644 vlimits.default $(VPOPMAILDIR)/etc/vlimits.default; \
    fi
	
	@#
	@# Copy vusagec.conf
	@#
	
	if test ! -r $(VPOPMAILDIR)/etc/vusagec.conf; then \
	   $(INSTALL) -o vpopmail -g vchkpw -m 644 vusagec.conf $(VPOPMAILDIR)/etc/vusagec.conf; \
    fi
	
	@#
	@# Install vusaged
	@#
	
	if test -x vusaged/vusaged; then \
	   (cd vusaged;make install); \
    fi
	
	@#
	@# Done
	@#
	
	@echo
	@echo "-------------------------------------------------"
	@echo "            vpopmail is installed"
	@echo "  Be sure to install the vusaged startup script"
	@echo "  located in vusaged/contrib/rc.vusaged"
	@echo "-------------------------------------------------"
	@echo
	
	@#
	@# Check if a backend has been installed
	@#
	
	@if ! test -r $(VPOPMAILDIR)/etc/vpopmail.authmodule; then \
	   (make authmodule); \
    fi

authmodule:
	@echo
	@echo "      *** You have not selected an authentication module! ***"
	@echo
	@sleep 5
	@echo
	@echo "  ***************************************************************"
	@echo "  ** Select an authentication module of CDB, MySQL,            **"
	@echo "  ** LDAP, PostgreSQL, Oracle, or SyBase from the              **"
	@echo "  ** backends directory and compile it with the following      **"
	@echo "  ** command:                                                  **"
	@echo "  **                                                           **"
	@echo "  ** cd backends/module && ./configure && make && make install **"
	@echo "  **                                                           **"
	@echo "  ***************************************************************"
	@echo
	

#
# Cleanup
# 

clean:
	@if test -r backends/postgres/Makefile; then (cd backends/postgres;make clean); fi
	@if test -r backends/ldap/Makefile; then (cd backends/ldap;make clean); fi
	@if test -r backends/cdb/Makefile; then (cd backends/cdb;make clean); fi
	@if test -r backends/mysql/Makefile; then (cd backends/mysql;make clean); fi
	rm -f *.o *.core core $(BUILD_BINS) $(BUILD_LIBS)
	(cd cdb;make clean)
	(cd vusaged;make clean)

distclean: clean
	@if test -r backends/postgres/Makefile; then (cd backends/postgres;make distclean); fi
	@if test -r backends/ldap/Makefile; then (cd backends/ldap;make distclean); fi
	@if test -r backends/cdb/Makefile; then (cd backends/cdb;make distclean); fi
	@if test -r backends/mysql/Makefile; then (cd backends/mysql;make distclean); fi
	rm -rf config.h Makefile autom4te.cache config.log config.status backends/module.mk
	(cd cdb;make distclean)
	(cd vusaged; make distclean)
