To run as daemon:
tcpserver -vHRD 0 89 ./vpopmaild

Then as client
telnet localhost 89

Or to run on the command line for testing
./vpopmaild

First login. example:
login postmaster@example.com password

Then for list of commands:
help


There is a PHP object to work with this daemon available at

   http://pmailadmin.sourceforge.net/


This is very rough, but it is a start for documentation on the daemon.
(Rick)

--------------------------------------------------------------------

2006-04-02: updated to reflect new "login" options and the fact that the
"help" command now only shows the commands available to the client's
security level. Fixed the description of the access rights needed for
"set_limits" to reflect what's in the code (only SA_ADMIN can run the
function.) 

There is also more information about setting up a vpopmaild service
under daemontools at this page:

   http://qmail.jms1.net/vpopmaild.shtml

-John Simpson <jms1@jms1.net>

--------------------------------------------------------------------

2006-04-04: removed "long_name" from the add_user command. if you need
to set the gecos name on a new mailbox, create it with the add_user
command and then use mod_user's "comment" command to change it (the
initial value is the same as the mailbox "userid". -jms1

--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------

                  V p o p m a i l d   c o m m a n d s


--------------------------------------------------------------------

login user@domain.ext password
clogin user@domain.ext password
slogin user@domain.ext password

Rights required: Must be a valid email address.

Action:	Verify the username and password of the persion desiring to
	login, and set their access rights.

	For the "login" command, a successful login will return a
	full list of the user's information.

	For the "clogin" command, a successful login wil return a
	compact version of the user's information- bitmap values
	are returned as a single numeric value instead of a line
	for each bit used. This reduces data transfer, but requires
	the client to split up the bitmap.  All commands that return
	a bitmap will return the numeric value. 

	For the "slogin" command, a successful login only returns
	the "+OK " response, with no additional information. This
	is useful in cases where the client does not need to know
	anything other than whether or not the login attempt was
	successful (i.e. for the SMTP AUTH command.)

--------------------------------------------------------------------

add_user user@domain.ext password

Rights required: SA_ADMIN, or QA_ADMIN

Action:  Add a new mailbox and user to the specified domain.  ONLY SA_ADMIN
can add users to domains other than the home domain of the login user.


--------------------------------------------------------------------

del_user  user@domain.ext

Rights required: SA_ADMIN, or QA_ADMIN

Action:  Delete a mailbox and user from the specified domain.  ONLY SA_ADMIN
can delete users to domains other than the home domain of the login user.


--------------------------------------------------------------------

mod_user user@domain.ext

Rights required: Only SA_ADMIN can modify users outside
the login user's home domain.  Only QA_ADMIN can modify other users.
Any user can modify part of their own data.

Action:  Modify a user account.  

The mod_user command is followed by any number of the following options,
one per line, followed by a line containing only a '.'.  Each flag except
the clear_all_flags expects a 0 or 1 to set the value of the flag.

Anyone can set these values:

comment - The full name of the user.

clear_text_password - Pass it a clear text password, and it will set both
                      the clear_text_password and the encrypted_password
                      field.  It handles encrypting the password internally.

no_spamassassin - Do not run SpamAssasin for this user, if it is set to
                  be run for users of this domain.

delete_spam - If set, mail identified as spam for this user will be deleted.


The QA_ADMIN or SA_ADMIN can change these values:


Only a SA_ADMIN or QA_ADMIN with override rights can change these values:

quota - Number of messages they can store.

clear_all_flags - reset all the following flag values to 0.

no_password_change - The user can not change their own password.

no_pop - The user can not access mail via pop.

no_webmail - The user can not access mail via a webmail program.

no_imap - The user can not access mail via imap.

bounce_mail - I'm not sure, but it sounds like a flag to bounce all
              mail to this user.

no_relay - I'm not sure, but it sounds like a flag to block use of SMTP
           for this user for mail leaving the server.

no_dialup - This is used by the optional radius server as a flag to stop
            radius from allowing this user to login to a modem.

user_flag_0 - Set and check this flag for anything you want.

user_flag_1 - Set and check this flag for anything you want.

user_flag_2 - Set and check this flag for anything you want.

user_flag_3 - Set and check this flag for anything you want.

no_smtp - I'm not sure.

domain_admin_privileges - allow this user limited access to their home domain.

override_domain_limits - Allow this user to change domain limits on their
                         own domain.  Probably also requires domain_admin.


Only a SA_ADMIN can change these values:

encrypted_password - an already encrypted password.  This only sets the
                     encrypted password field.

system_admin_privileges - allow this user full access to all domains.

system_expert_privileges - allow this user to edit .qmail files.



--------------------------------------------------------------------

user_info user@domain.ext

Rights required: SA_ADMIN, or QA_ADMIN

Action:  Return information about a user.

The following items are returned as a string.
 
name - User name, same as user part of address selected. 

comment - Usually the long name of the user. 

quota - How much disk space the user is allowed.

user_dir - The home directory for the user.

encrypted_password - The encrypted value of the password.

clear_text_password - The password in clear text.

If the login type was clogin, all of the following information
will be returned within a single decimal number.  You can use the
information at the bottom of this file as a key to decode the values.
This is much faster, but requires the client to decode the bitmap.

Otherwise the following values are returned as the character '1' or '0'. '1'
says the field is active which, for example an active no_password_change
means the user can not change passwords.

no_password_change, no_pop, no_webmail, no_imap, bounce_mail, no_relay,
no_dialup, user_flag_0, user_flag_1, user_flag_2, user_flag_3, no_smpt


The following items confer extra privileges to the user. A '1' says that
the user has that right.

domain_admin_privileges, override_domain_limits, system_admin_privileges


The following items control the operation of Spamassassin.
no_spamassassin, delete_spam


--------------------------------------------------------------------

add_domain domain password

Rights required: SA_ADMIN

Action:  Add a new, real domain.  The postmaster user is automatically 
created, and cannot be deleted.  The password given is assigned to the
postmaster user.


--------------------------------------------------------------------

add_alias_domain domain alias

Rights required: SA_ADMIN

Action:  Add an alias to an existing domain.  Qmail will recognize
the alias domain name, but all incoming mail to that domain will
be sent to the real domain.  Currently the order of the parameters
must be correct.  Consider stealing code from vaddaliasdomain so
it doesn't matter what order you enter them in.


--------------------------------------------------------------------

del_domain domain

Rights required: SA_ADMIN

Action:  Delete a domain from the system.  If the domain is an alias
it will delete only the alias.  If the domain has aliases, the domain
and all of its aliases will be deleted.  If you want to warn the user
of your program when alias domains exist, YOU will have to do it yourself
by using dom_info() to check the status of the domain in question.


--------------------------------------------------------------------

dom_info domain

Rights required: SA_ADMIN

Action: return internal information about a domain.  The information
returned includes: domain directory, userid, groupid, number of users,
If you ask for an alias domain, you will receive information for the
parent domain.  Part of that information will include a list of all
alias names of the parent domain.


--------------------------------------------------------------------

find_domain domain per_page

Rights required: SA_ADMIN

Action: Return the page number that the named domain appears on.
This can be used when you are using list_domains with the optional 
page and lines_per_page parameters.  If you list the page returned
by find_domain, the desired domain will appear on that page. It 
may not be at the top of the page.  The page positions are fixed.


--------------------------------------------------------------------

domain_count 

Rights required: SA_ADMIN

Action:  Return the number of domains.  This can be used to determine
the number of pages of domain information that is available.


--------------------------------------------------------------------

user_count domain

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only manage their
own domain.

Action:  Return the number of accounts in a domain.  This can be used 
to determine the number of pages of user account information that is 
available.


--------------------------------------------------------------------

mk_dir directory

Rights required: SA_ADMIN, QA_ADMIN or USER.  QA_ADMIN can only work within
their own domain.  USER can only work within their home directory.

Action:  Create a directory.

Directory can be specified as a real path starting at root, as a domain
name, or as an email address.  When a domain name is specified, that
is replaced by the path to the domain directory for that domain.  When 
an email address is specified, that starts at the home directory for 
that email address.


--------------------------------------------------------------------

rm_dir directory

Rights required: SA_ADMIN, QA_ADMIN or USER.  QA_ADMIN can only work within
their own domain.  USER can only work within their home directory.

Action:  Remove a directory

Directory can be specified as a real path starting at root, as a domain
name, or as an email address.  When a domain name is specified, that
is replaced by the path to the domain directory for that domain.  When 
an email address is specified, that starts at the home directory for 
that email address.


--------------------------------------------------------------------

list_dir directory

Rights required: SA_ADMIN, QA_ADMIN or USER.  QA_ADMIN can only work within
their own domain.  USER can only work within their home directory.

Action:  List the contents of a directory.

Directory can be specified as a real path starting at root, as a domain
name, or as an email address.  When a domain name is specified, that
is replaced by the path to the domain directory for that domain.  When 
an email address is specified, that starts at the home directory for 
that email address.

Directory contents are returned one per line, with an indication of the 
type of directory entry.  For example:

Maildir dir
lastauth file

The possible type values are: file, dir, chardev, plkdev, fifo, 
link, sock, unknown.


--------------------------------------------------------------------

rm_file filename

Rights required: SA_ADMIN, QA_ADMIN or USER.  QA_ADMIN can only work within
their own domain.  USER can only work within their home directory.

Action:  Remove a file.

Directory can be specified as a real path starting at root, as a domain
name, or as an email address.  When a domain name is specified, that
is replaced by the path to the domain directory for that domain.  When 
an email address is specified, that starts at the home directory for 
that email address.


--------------------------------------------------------------------

write_file filename

Rights required: SA_ADMIN, QA_ADMIN or USER.  QA_ADMIN can only work within
their own domain.  USER can only work within their home directory.

Action:  Write lines to a file.

Directory can be specified as a real path starting at root, as a domain
name, or as an email address.  When a domain name is specified, that
is replaced by the path to the domain directory for that domain.  When 
an email address is specified, that starts at the home directory for 
that email address.

File contents are sent, one line sent to the daemon for each line
to add to the file.  After the last line send a line containing only
a period '.' to mark the end of file.


--------------------------------------------------------------------

int read_file()

Rights required: SA_ADMIN, QA_ADMIN or USER.  QA_ADMIN can only work within
their own domain.  USER can only work within their home directory.

Action:  Read lines from a file.

Directory can be specified as a real path starting at root, as a domain
name, or as an email address.  When a domain name is specified, that
is replaced by the path to the domain directory for that domain.  When 
an email address is specified, that starts at the home directory for 
that email address.

File contents are received, one line from the daemon for each line
in the file.  After the last line of the file a line containing only
a period '.' is sent to mark the end of file.



--------------------------------------------------------------------

list_domains [page lines_per_page]

Rights required: SA_ADMIN

Action:  List all domains on the system, and their parent domain.
If the optional page is given, lines_per_page must be specified also.
When both are given, the data is broken up into pages with lines_per_page
lines on each.  The page returned is specified by page.

Alias domains are identified by the fact that the domain name does
not match the real domain name.


--------------------------------------------------------------------

list_users domain [page lines_per_page]

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only manage their
                 own domain.

Action:  List all Mailbox accounts for a domain.

It returns the same info about a user as something else.  Find it and
copy the info here.  If the optional page is given, lines_per_page must be 
specified also.  When both are given, the data is broken up into pages with 
lines_per_page lines on each.  The page returned is specified by page.


--------------------------------------------------------------------

list_alias domain

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only manage their
                 own domain.

Action:  List all aliases for a domain.  Currently, this scans the directory
         for aliases.  It needs to be changed to use the new valias calls
         Tom just added.


List all Mailbox accounts for a domain.


--------------------------------------------------------------------

list_lists domain

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only manage their
                 own domain.

Action:  Send a list of all mailing lists within a domain.  One entry 
per line, with a line containing only a '.' at the end.


--------------------------------------------------------------------

get_ip_map ip_address

Rights required: Anyone

Action: Return the domain assoicated with this IP Address, if any.


--------------------------------------------------------------------

add_ip_map ip_address domain

Rights required: SA_ADMIN

Action:  Make an IP address point to a domain. 

WARNING:  It does not look like there is any duplicate checking on
this, so make sure what you enter is valid!  I think I once got the
IP and name backwards, and it was stored that way.  The error checking
belongs in the vpopmail library.


--------------------------------------------------------------------

del_ip_map ip_address domain

Rights required: SA_ADMIN

Action:  Delete an association between an IP address and a domain name.


--------------------------------------------------------------------

show_ip_map

Rights required: SA_ADMIN

Action:  Display the mapping between IP addresses and domain names.


--------------------------------------------------------------------

get_limits domain

Rights required: Any.  SA_ADMIN can read all domains, all other users
                 can only read their own domain.

Action:  Return Limits informaiton for a domain.  If no special limits 
         are set, it returns the default limit settings for all domains.
         Find out where these files are kept, and add it here.

max_popaccounts
max_aliases
max_forwards
max_autoresponders
max_mailinglists
maxmailinglists
disk_quota
max_msgcount
default_quota
default_maxmsgcount
disable_pop
disable_imap
disable_dialup
disable_password_changing
disable_webmail
disable_external_relay
disable_smtp
disable_spamassassin
delete_spam
perm_account
perm_alias
perm_forward
perm_autoresponder
perm_maillist
perm_quota
perm_defaultquota


--------------------------------------------------------------------

set_limits domain

Rights required: SA_ADMIN

Action:  Set Limits informaiton for a domain.  

max_popaccounts
max_aliases
max_forwards
max_autoresponders
max_mailinglists
maxmailinglists
disk_quota
max_msgcount
default_quota
default_maxmsgcount
disable_pop
disable_imap
disable_dialup
disable_password_changing
disable_webmail
disable_external_relay
disable_smtp
disable_spamassassin
delete_spam
perm_account
perm_alias
perm_forward
perm_autoresponder
perm_maillist
perm_quota
perm_defaultquota


--------------------------------------------------------------------

del_limits domain

Rights required: SA_ADMIN

Action:  Delete the limits file for a domin.  This will make the
         domain revert to the global limits set somewhere. (Find
         out where, and add it here.)


--------------------------------------------------------------------

get_lastauth user@domain.ext

Rights required: Any.  SA_ADMIN can list any user, QA_ADMIN can list
                 any user in their domain, USER can list only their
                 own.

Action:  Return the last time and IP address from the last time the
user logged in.


--------------------------------------------------------------------

int get_lastauthip()     --    D E L E T E D ! 

Merged with get_lastauth(), use it instead.  


--------------------------------------------------------------------

int add_list()

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only work in
                 its home domain.

Action:  Add an ezmlm mailing list.  Not implemented yet.


--------------------------------------------------------------------

int del_list()

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only work in
                 its home domain.

Action:  Delete an ezmlm mailing list.  Not implemented yet.


--------------------------------------------------------------------

int mod_list()

Rights required: SA_ADMIN, or QA_ADMIN.  QA_ADMIN can only work in
                 its home domain.

Action:  Modify an ezmlm mailing list.  Not implemented yet.


--------------------------------------------------------------------

quit

Rights required: Any

Action:  Shutdown the daemon.  You should always call this before
         exiting the program communicating with the daemon.


--------------------------------------------------------------------

help

Rights required: Any

Action:	Display a list of the commands currently available to the
	client. The list will adjust itself to match the access
	rights of the userid with which the client is logged in.
	If the client is not logged in yet, only the "login",
	"clogin", "slogin", "help", and "quit" commands are shown.

--------------------------------------------------------------------


--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------

This appeared early in the discussion leading to the daemon, so
until I find a better place for it, I'll add it here.  The important
thing is the comments on what each bit is supposed to mean.  This
may get re-worked into documentation on the daemon.


List of bits in the gid or flags field for a user, from a message 
from Ken on the vpopmail list.


I'll try to give a detailed listing.
#define NO_PASSWD_CHNG 0x01
If set, the code should not allow the password to be changed

#define NO_POP         0x02
If set, reject pop authentications

#define NO_WEBMAIL     0x04
If set, reject webmail authentications

#define NO_IMAP        0x08
If set, reject imap authentications

#define BOUNCE_MAIL    0x10
If set, bounce any incoming mail back to the sender

#define NO_RELAY       0x20
If set, do not allow the account to relay email.
This is useful for sites that want to have email accounts that
are only allowed to send email internally.

#define NO_DIALUP      0x40
If set, code should not allow dialup access. This was originally
added to support radius sites.

#define V_USER0       0x080
#define V_USER1       0x100
#define V_USER2       0x200
#define V_USER3       0x400
After adding the NO_DIALUP flag we relalized there may be other
flags people will want that are not directly used by any email code.

#define NO_SMTP       0x800
If set, do not allow smtp connections.

#define QA_ADMIN     0x1000
If set, the user is granted admin privilages in qmailadmin

#define V_OVERRIDE   0x2000
If set, the user is not subject to domain limits. Part of the
vlimit code.

#define NO_SPAMASSASSIN 0x4000
If set, (and --enable-spamassassin=y) do not process the
incoming mail through spamassassin. 

#define DELETE_SPAM  0x8000
with --enable-spamasssassin=y setting this flag
will delete all email above the users required_hits
preference.

